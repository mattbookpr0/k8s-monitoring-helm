{{ define "alloy.config.tracesService" }}
// Tempo
remote.kubernetes.secret "traces_service" {
  name = {{ include "kubernetes_monitoring.traces_service.secret.name" . | quote }}
  namespace = {{ .Values.externalServices.tempo.secret.namespace | default .Release.Namespace | quote }}
}

{{- with .Values.externalServices.tempo }}
{{ if eq .authMode "basic" }}
otelcol.auth.basic "traces_service" {
  username = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .basicAuth.usernameKey | quote }}])
  password = remote.kubernetes.secret.traces_service.data[{{ .basicAuth.passwordKey | quote }}]
}
{{- else if eq .authMode "bearerToken" }}
otelcol.auth.bearer "traces_service" {
  token = remote.kubernetes.secret.traces_service.data[{{ .bearerToken.tokenKey | quote }}]
}
{{- else if eq .authMode "oauth2" }}
otelcol.auth.oauth2 "traces_service" {
  {{- if eq .oauth2.clientId "" }}
  client_id = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .oauth2.clientIdKey | quote }}])
  {{- else }}
  client_id = {{ .oauth2.clientId | quote }}
  {{- end }}

  {{- if eq .oauth2.clientSecretFile "" }}
  client_secret = remote.kubernetes.secret.traces_service.data[{{ .oauth2.clientSecretKey | quote }}]
  {{- else }}
  client_secret_file = {{ .oauth2.clientSecretFile | quote }}
  {{- end }}
  {{- if .oauth2.endpointParams }}
  endpoint_params = {
  {{- range $k, $v := .oauth2.endpointParams }}
    {{ $k }} = {{ $v | quote }},
  {{- end }}
  }
  {{- end }}
  {{- if .oauth2.scopes }}
  scopes = {{ .oauth2.scopes | toJson }}
  {{- end }}
  {{- if .oauth2.tokenURL }}
  token_url = {{ required ".Values.oauth2.tokenURL is a required value when .Values.authMode is oauth2" .oauth2.tokenURL | quote }}
  {{- end }}
}
{{- end }}
{{ if eq .protocol "otlp" }}
otelcol.exporter.otlp "traces_service" {
{{- else if eq .protocol "otlphttp" }}
otelcol.exporter.otlphttp "traces_service" {
{{- end }}
  client {
    endpoint = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .hostKey | quote }}])
{{ if eq .authMode "basic" }}
    auth = otelcol.auth.basic.traces_service.handler
{{- else if eq .authMode "bearerToken" }}
    auth = otelcol.auth.bearer.traces_service.handler
{{- else if eq .authMode "oauth2" }}
    auth = otelcol.auth.oauth2.traces_service.handler
{{- end }}
    headers = {
      "X-Scope-OrgID" = nonsensitive(remote.kubernetes.secret.traces_service.data[{{ .tenantIdKey | quote }}]),
{{- range $key, $value := .extraHeaders }}
      {{ $key | quote }} = {{ $value | quote }},
{{- end }}
{{- range $key, $value := .extraHeadersFrom }}
      {{ $key | quote }} = {{ $value }},
{{- end }}
    }
{{- if .readBufferSize }}
    read_buffer_size = {{ .readBufferSize | quote }}
{{- end }}
{{- if .writeBufferSize }}
    write_buffer_size = {{ .writeBufferSize | quote }}
{{- end }}
{{- if .tlsOptions }}
    tls {
{{ .tlsOptions | indent 6 }}
    }
{{- else if .tls }}
    tls {
    {{- range $k, $v := .tls }}
      {{ $k }} = {{ $v | toJson }}
    {{- end }}
    }
{{- end }}
  }
}
{{- end }}
{{ end }}
